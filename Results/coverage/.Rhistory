BiocManager::install("ExploreModelMatrix")
library("ExploreModelMatrix")
(sampleData <- data.frame(genotype = rep(c("A", "B"), each = 4),
treatment = rep(c("ctrl", "trt"), 4)))
vd <- VisualizeDesign(sampleData = sampleData,
designFormula = ~ genotype + treatment,
textSizeFitted = 4)
cowplot::plot_grid(plotlist = vd$plotlist)
app <- ExploreModelMatrix(sampleData = sampleData,
designFormula = ~ genotype + treatment)
if (interactive()) shiny::runApp(app)
install.packages("xaringan")
library("xaringan")
xaringan:::inf_mr()
devtools::install_github("vincent-van-hoef/Analysis5204")
devtools::install_github(repo ='Olink-Proteomics/OlinkRPackage/OlinkAnalyze', build_vignettes = TRUE)
devtools::install_github("vincent-van-hoef/Analysis5204")
install.packages("tidymodels")
library("tidymodels")
isntall.packages("parsnip")
install.packages("parsnip")
install.packages("parsnip")
parsnip:::parsnip_addin()
boost_tree_xgboost_spec <-
boost_tree() %>%
set_engine('xgboost') %>%
set_mode('regression')
plasma_metadata
library("Analysis5204")
plasma_metadata
plasma
plasma_npx
120*6*4
8*37
setwd("~/Desktop/NBIS/Projects/project_5975/SMS-5975-21-mut_bc/Results/coverage")
filelist <- list.files(pattern = "_cov.tsv")
filelist <- lapply(filelist, function(x) read.delim(x))
filelist[[1]]
dplyr::bind_rows(filelist, .id = 'source')
dplyr::bind_cols(filelist, .id = 'source')
dplyr::bind_cols(filelist)
dplyr::bind_rows(filelist)
head(filelist[1])
filelist <- lapply(filelist, function(x) read.delim(x, header = FALSE))
filelist <- list.files(pattern = "_cov.tsv")
filelist <- lapply(filelist, function(x) read.delim(x, header = FALSE))
head(filelist[1])
dplyr::bind_rows(filelist)
dplyr::bind_rows(filelist, .id = "variable")
filelist <- list.files(pattern = "_cov.tsv")
filelist <- lapply(filelist, function(x) read.delim(x, header = FALSE))
names(filelist) <- gsub("_cov.tsv", "", list.files(pattern = "_cov.tsv"))
dplyr::bind_rows(filelist, .id = "Sample")
pl <- dplyr::bind_rows(filelist, .id = "Sample")
ggplot(pl, aes(x = Sample, y = V5)) + geom_boxplot()
ggplot2(pl, aes(x = Sample, y = V5)) + geom_boxplot()
library(ggplot2)
ggplot2(pl, aes(x = Sample, y = V5)) + geom_boxplot()
library("ggplot2")
ggplot(pl, aes(x = Sample, y = V5)) + geom_boxplot()
ggplot(pl, aes(x = Sample, y = V5)) +
geom_boxplot() +
theme_classic()
ggplot(pl, aes(x = reorder(Sample, median(V5), y = V5)) +
ggplot(pl, aes(x = reorder(Sample, median(V5)), y = V5)) +
geom_boxplot() +
theme_classic()
ggplot(pl, aes(x = reorder(Sample, V5, FUN = median), y = V5)) +
geom_boxplot() +
theme_classic()
ggplot(pl, aes(x = reorder(Sample, V5, FUN = median), y = V5)) +
geom_boxplot() +
ylim(0,750) +
theme_classic()
ggplot(pl, aes(x = reorder(Sample, V5, FUN = median), y = V5)) +
geom_boxplot() +
ylim(0,1000) +
theme_classic()
ggplot(pl, aes(x = reorder(Sample, V5, FUN = median), y = V5)) +
geom_boxplot() +
ylim(0,1000) +
xlab("") +
ylab("Average Coverage per Target per Sample") +
theme_classic()
filelist <- list.files(pattern = "_cov.tsv")
filelist <- lapply(filelist, function(x) read.delim(x, header = FALSE))
names(filelist) <- gsub("_cov.tsv", "", list.files(pattern = "_cov.tsv"))
pl <- dplyr::bind_rows(filelist, .id = "Sample")
ggplot(pl, aes(x = reorder(Sample, V5, FUN = median), y = V5)) +
geom_boxplot() +
ylim(0,1000) +
xlab("") +
ylab("Average Coverage per Target per Sample") +
theme_classic()
filelist <- list.files(pattern = "_cov.tsv")
filelist <- list.files(pattern = "_cov.tsv")
filelist <- lapply(filelist, function(x) read.delim(x, header = FALSE))
names(filelist) <- gsub("_cov.tsv", "", list.files(pattern = "_cov.tsv"))
pl <- dplyr::bind_rows(filelist, .id = "Sample")
ggplot(pl, aes(x = reorder(Sample, V5, FUN = median), y = V5)) +
geom_boxplot() +
ylim(0,1000) +
xlab("") +
ylab("Average Coverage per Target per Sample") +
theme_classic()
ggplot(pl, aes(x = reorder(Sample, V5, FUN = median), y = V5)) +
geom_boxplot() +
ylim(0,1000) +
xlab("") +
ylab("Average Coverage per Target per Sample") +
theme_classic()
ggplot(pl, aes(x = reorder(Sample, V5, FUN = median), y = V5)) +
geom_boxplot() +
ylim(0,1000) +
xlab("") +
ylab("Average Coverage per Target per Sample") +
theme_classic() +
theme(axis.text.x = element_blank())
ggplot(pl, aes(x = reorder(Sample, V5, FUN = median), y = V5)) +
geom_boxplot(outlier.shape = NA, coef = 0) +
ylim(0,1000) +
xlab("") +
ylab("Average Coverage per Target per Sample") +
theme_classic() +
theme(axis.text.x = element_blank())
